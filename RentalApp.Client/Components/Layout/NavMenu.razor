@using RentalApp.Client.Services;
@using RentalApp.Model;
@inject IConnectionService ConnectionService;

<ul class="flex justify-between my-4 ml-8 text-white uppercase tracking-wider">
    <li>
        <div class="mr-6 pb-2 mt-1 border-2 border-gray-700 w-6 h-6 @(_status ? "bg-green-500" : "bg-red-500") rounded-full"></div>
    </li>
    <li>
        <NavLink class="mr-6 pb-2 border-b-4 border-pink-600 hover:border-green-400" href="" Match="NavLinkMatch.All">
            Home
        </NavLink>
    </li>
    <li>
        <NavLink class="mr-6 pb-2 border-b-4 border-pink-600 hover:border-green-400" href="/login">
            Login
        </NavLink>
    </li>
    <li>
        <div @onmouseover="ToggleDropdown" @onmouseout="ToggleDropdown">
            <NavLink class="mr-6 pb-2 border-b-4 border-pink-600 hover:border-green-400" href="/manager">
                Management
            </NavLink>

            <div class="@(_toggleDropdown ? "" : "hidden") mt-3 p-1 absolute -translate-x-1.5 bg-orange-100 rounded-lg text-center text-gray-700 font-semibold">
                <ul>
                    <li>
                        <NavLink href="/manager/rental">
                            Rental
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="/manager/customer">
                            Customer
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="/manager/car">
                            Car
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="/manager/maintenance">
                            Maintenance
                        </NavLink>
                    </li>
                </ul>
            </div>
        </div>
    </li>
</ul>

@code {
    private bool _status = false;
    private bool _toggleDropdown = false;

    protected override async Task OnInitializedAsync()
    {
        ConnectionService.StatusEventHandler += StatusChanged;

        await base.OnInitializedAsync();
    }

    private async void StatusChanged(object? sender, bool status)
    {
        if (status != _status)
        {
            _status = status;
            await InvokeAsync(StateHasChanged);
        }
    }

    private void ToggleDropdown()
    {
        if (_toggleDropdown)
            _toggleDropdown = false;
        else
            _toggleDropdown = true;
    }
}
